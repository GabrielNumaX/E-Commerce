13.09.2019

how to open in browser dynamically created link (with params)
being product.html an static file in anchor tags?

I hope it's clear and maybe you could give us
an example on how /product/details.html?p=1
is opened.


APIS

Homepage: https://5d76bf96515d1a0014085cf9.mockapi.io/product
Product Details: https://5d76bf96515d1a0014085cf9.mockapi.io/product/1
/1 es id eso cambia la api del producto

Create Order: https://5d76bf96515d1a0014085cf9.mockapi.io/order

Banner Images:
1) https://imgur.com/96OnkX7.png
2) https://imgur.com/KtGxwnN.png
3) https://imgur.com/sfjg9R8.png
4) https://imgur.com/p0wdadG.png

EdYoda Projects Logo:
https://i.imgur.com/OKAY6Fl.png

-----------------------------------------------------
carousel - slick

https://www.edyoda.com/course/1482?episode_id=2533

JQuery plugins

kenwheeler.github.io/slick

- download code in zip
- extract in folder for later link reference
- add jquery
- import slick files
	- slick.min.js AT THE END OF HTML
	- slick.css
	- slick-theme.css

- add js in file and script in html
- this is the main structure

$(document).ready(function(){
  $('.your-class').slick({
    setting-name: setting-value
  });
});

from then on check: kenwheeler.github.io/slick
for funcionalities

API 

[
    {
        "id": "1",
        "name": "Men Navy Blue Solid Sweatshirt",
        "preview": "https://assets.myntassets.com/h_1440,q_100,w_1080/v1/assets/images/7579188/2018/11/5/08a7b230-ee8f-46c0-a945-4e835a3c01c01541402833619-United-Colors-of-Benetton-Men-Sweatshirts-1271541402833444-1.jpg",
        "photos": [
            "https://assets.myntassets.com/h_1440,q_100,w_1080/v1/assets/images/7579188/2018/11/5/08a7b230-ee8f-46c0-a945-4e835a3c01c01541402833619-United-Colors-of-Benetton-Men-Sweatshirts-1271541402833444-1.jpg",
            "https://assets.myntassets.com/h_1440,q_100,w_1080/v1/assets/images/7579188/2018/11/5/efc3d5b9-1bb3-4427-af53-7acae7af98951541402833591-United-Colors-of-Benetton-Men-Sweatshirts-1271541402833444-2.jpg",
            "https://assets.myntassets.com/h_1440,q_100,w_1080/v1/assets/images/7579188/2018/11/5/c7e58861-3431-4189-9903-9880f5eebd181541402833566-United-Colors-of-Benetton-Men-Sweatshirts-1271541402833444-3.jpg",
            "https://assets.myntassets.com/h_1440,q_100,w_1080/v1/assets/images/7579188/2018/11/5/66490b64-32de-44b4-a6e4-fe36f1c040051541402833548-United-Colors-of-Benetton-Men-Sweatshirts-1271541402833444-4.jpg",
            "https://assets.myntassets.com/h_1440,q_100,w_1080/v1/assets/images/7579188/2018/11/5/957be784-7c5d-4e90-ab9f-0928015b22891541402833645-United-Colors-of-Benetton-Men-Sweatshirts-1271541402833444-5.jpg"
        ],
        "description": "Navy solid sweatshirt with patchwork, has a round neck, long sleeves, straight hem",
        "size": [
            1,
            1,
            0,
            1,
            0
        ],
        "isAccessory": false,
        "brand": "United Colors of Benetton",
        "price": 2599
    } ];
 	,...

ESTO PARA ITERAR EN EL OBJETO

  for(var i=0; i < obj.length; i++) {
          console.log('index ' + obj[i]);

          Object.keys(obj[i]).forEach(function(key) {
             // REMEMBER THIS
             // console.log('key ' + key)
             // console.log('value ' + myJson[i][key]);
             // console.log(myJson[i]) //PRINTS WHOLE OBJECT 
	     // console.log(myJson[i].brand); ACCEDE AL VALUE DE ESA KEY 
            //aca irian los if
	}
  }

-------------------------------------------------
ADD ID TO ELEMENT

$('element').attr('id', 'value');

$(function() {
    $('span .breadcrumb').each(function(){
        $('#nav').attr('id', $(this).text());
        $('#container').attr('id', $(this).text());
        $('.stretch_footer').attr('id', $(this).text())
        $('#footer').attr('id', $(this).text());
    });
});

------------------------------------------------------
TO LISTEN ON DYNAMIC ELEMENTS
https://youtu.be/Wxnd21_f_pc

$('parent').on('click', 'dynamic element' ,function() {
	$(this).
});

--------------------------------------------------------
API calls and handling

https://www.edyoda.com/course/1482?episode_id=2533

25:00

no local backend

26:50 

HANDLE URL PARAMS
https://www.youtube.com/watch?v=zDovsTG2a7g

click on home PROD or ACC calls to backend and load data on product

url/product/details.html?p=1 //query param -> id

27:48 

access param -> window.location.search -> ?p=1

.split('=') -> ['?p', '9']

var.split('=')[1] -> '9'

send to backend to get data -> API id

append to API call to send to backend url

32:09 

cart count

01-backend cart: 
02-brower storage: 

console-> application->storage-> key/value

window.localStorage -> shows
window.localStorge.setItem('app-name', 'Final Project')
//key value

window.localStorage.getItem('app-name') -> 'Final Project'

check for shopping-cart value in

window.localStorage

also for prices -> localStorage

39:46

display in cart

43:00


object in localStorage.setItem('key',JSON.stringify(object));
-> "{"name":"john"}"

JSON.parse(localStorage.getItem('key'))



--------------------------------------------------------
13.09.2019 session 

after for loop to print object key of JSON

console.log(object[i].key)

****************************
en la function que crea dinamico para el objeto como parametro
y luego adentro en cada elemento para obj.key

luego ejecuta la function en el for loop de la llamada
(obj[i]) del JSON

******************************
para una POST crea un obj y de ahi lo manda

********************************
OPEN DYNAMIC LINK ON BROWSER

url with params en este caso un ID

creates link with cardLink.href 'url.html?=params'+id

CARGA EL .html

VAIBHAV

Its like write the basic HTML structure along with classes and 
in Javascript select the ids of these elements and add the data 
to these elements.

1. Like you have a img tag in HTML file here 

2. you will write a call to get the link for the image 
from backend. 

3. Once you get the data from backend you will select the 
element using the id of this img tag

4.  then set the src attribute value using the data 
received from the API Call.

-----------------------------------------------------------
DYNAMIC LINKS

cambia el href de los de los cardLink que serian los div
creados dynamic

var cardLink = document.createElement('a');
cardLink.href = './details.html';

todos los div van al mismo html (details)

cardLink.href = './details.html?video_id=100'

AHI ABRE EL DETAILS.HTML pero con el mismo param
entonces lo hace dynamic

cardLink.href = './details.html?video_id=' + videoObj.id;

AHI ANDA DYNAMIC URL

TENGO QUE HACER ESTO EN LOS DIV DE LOS ART Y ACC

en la console -> location.search -> "?video_id=2"

create structure -> response from backend 
-> update html values

PONE UNA IMG cualqiera en el html que despues updates
el src

hace la llamada get en details.

y le pasa el thumbnail del OBJ para update
el src.

----------------------------------------------------------------
SRC FROM DYNAMIC IMG

https://stackoverflow.com/questions/32761616/how-to-get-the-image-src-which-is-dynamically-created

----------------------------------------------------------------
18.09.2019 session

PRODUCT.html

add to cart button -> localStorage

currentObj in localStorage

PRIMERO CREA currentObj (global) 
y lo llena con data del .get
de ahi lo manipula

creates an array to store product list
in btn add to cart

add COUNT to obj in local Storage to


*****************************************
window.localStorge.setItem('app-name', 'Final Project')
//key value

object in localStorage.setItem('key',JSON.stringify(object));
-> "{"name":"john"}"

JSON.parse(localStorage.getItem('key'))

*****************************************

create prodList
check and create to array
check if it's 0 or not to push
parse as array JSON.parse(obj)
check for id
check for position - update count
else create count-push- push to localStorage

CHECKOUT.HTML

fetch prodList from localStorage
updates cart count with that

function to dynamically create html

iterates over productList

call function inside for loop 
function(productList[i]) 

filters OBJ and appends to div

use $().html instead of $().text

PLACE ORDER button

IN REAL CASES OBJ HAS TO BE IDENTICAL
TO BACKEND OBJ

for...prodList

  var prodObj = {formato con prodList[i].id etc.}


BACKEND CALL

function

var dataObj = {
  amount: amountVar,
  products: prodList (array) pasa prodObj
}

$.post(/order API, dataObj, function() {
 
  location.assign('url confirmation');
 
  //clean localStorage

  localStorage.setItem('product-list' []);
  y tambien cart count  


});




-----------------------------------------------------------------
LOG:
   				hours	days
10.09.2019 - 15:45 - 19:00 	3.15	1
11.09.2019 - 07:30 - 15:00	7.30	2
11.09.2019 - 17:00 - 00:15	7.15	2
12.09.2019 - 06:00 - 12:30	6.30	3
12.09.2019 - 14:40 - 17:00	2.20	3
17.09.2019 - 15:05 - 19:00	3.55	4
18.09.2019 - 14:20 - 17:00	2.40	5
19.09.2019 - 10:15 - 13:20	3.05	6
19.09.2019 - 14:30 - 02:45	12.15	6
				----------
				48.45	6
				8.45 hs per day




